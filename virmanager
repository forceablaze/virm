#!/usr/bin/env node

const vorpal = require('vorpal')();

import SubProcess from './module/process';
import Manager from './manager';

const manager = Manager.getInstance();
const WORKING_DIR = __dirname;

vorpal
    .command('list <category>', 'List category.')
    .alias('l')
    .action(function(args, cb) {
        manager.list(args.category);
        cb();
    });

vorpal
    .command('create <category> <name>', 'Create item.')
    .alias('c')
    .action(function(args, cb) {
        console.log("create");
        if(args.category == 'vm') {
            manager.createVM(args.name);
        }
        else if(args.category == 'pci') {
        }
        cb();
    });

vorpal
    .command('start <category> <uuid>', 'Start a device.')
    .alias('s')
    .action(function(args, cb) {
        if(args.uuid !== undefined)
            manager.start(args.category, args.uuid);
        cb();
    });

vorpal
    .command('stop <category> <uuid>', 'Stop a device.')
    .alias('S')
    .action(function(args, cb) {
        if(args.uuid !== undefined)
            manager.stop(args.category, args.uuid);
        cb();
    });

vorpal
    .delimiter('virmanager:')
    .show()
    .parse(process.argv);
